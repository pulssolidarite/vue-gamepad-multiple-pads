{"version":3,"file":"vue-gamepad.js","sources":["../lib/utils.js","../lib/button-mapping.js","../lib/gamepad.js","../lib/index.js"],"sourcesContent":["/**\n * helper function to build all nested properties similar to lodash's _.set function\n *\n * set(object, ['x', 'y', 'z'], 'default')\n * console.log(object.x.y.z);\n *  => default\n *\n * @param {object} obj object to build properties for\n * @param {array} keys list of keys to nest\n * @param {any} value value to set\n */\nexport function set(obj, keys, value) {\n  /* eslint-disable no-param-reassign */\n  obj[keys[0]] = obj[keys[0]] || {};\n  const tmp = obj[keys[0]];\n\n  if (keys.length > 1) {\n    keys.shift();\n    set(tmp, keys, value);\n  } else {\n    obj[keys[0]] = value;\n  }\n\n  return obj;\n}\n\n/**\n * helper function to get value from a nest object similar to lodash's _.get function\n *\n * get({ x: { y: 0 } }, ['x', 'y', 'z'], [])\n * => []\n *\n * @param {object} obj object to get properties from\n * @param {array} keys list of keys to use\n * @param {any} [def=undefined] default value if nothing was found\n */\nexport function get(obj, keys, def = undefined) {\n  const tmp = obj[keys[0]];\n\n  if (keys.length > 1 && tmp) {\n    keys.shift();\n    return get(tmp, keys) || def;\n  }\n\n  return tmp || def;\n}\n","export const ButtonNames = [\n  'button-a', 'button-b', 'button-x', 'button-y',\n  'shoulder-left', 'shoulder-right', 'trigger-left', 'trigger-right',\n  'button-select', 'button-start',\n  'left-stick-in', 'right-stick-in',\n  'button-dpad-up', 'button-dpad-down', 'button-dpad-left', 'button-dpad-right',\n  'vendor',\n];\n\nexport const PositiveAxisNames = [\n  'left-analog-right', 'left-analog-down',\n  'right-analog-right', 'right-analog-down',\n];\n\nexport const NegativeAxisNames = [\n  'left-analog-left', 'left-analog-up',\n  'right-analog-left', 'right-analog-up',\n];\n\n/**\n * get name of axis from input value\n * @param {number} axis axis id\n * @param {number} value current input value\n * @return {string} string representing the axis name\n */\nexport function getAxisNameFromValue(axis, value) {\n  if (value > 0) return PositiveAxisNames[axis];\n  return NegativeAxisNames[axis];\n}\n\n/**\n * get the name of both position and negative names from an axis\n * @param {number} axis axis is\n * @return {array} array containing both position and negative axis names\n */\nexport function getAxisNames(axis) {\n  return [PositiveAxisNames[axis], NegativeAxisNames[axis]];\n}\n","import { set, get } from './utils';\nimport { getAxisNameFromValue, getAxisNames } from './button-mapping';\n\nexport default function (Vue, options = {}) {\n  return class Gamepad {\n    constructor() {\n      this.holding = {};\n      this.events = {};\n      this.layer = 0;\n      this.layers = {};\n\n      window.addEventListener('gamepadconnected', this.padConnected.bind(this));\n      window.addEventListener('gamepaddisconnected', this.padDisconnected.bind(this));\n\n      this.animationFrame = requestAnimationFrame(this.run.bind(this));\n    }\n\n    /**\n     * gamepad was connected\n     */\n    padConnected() {\n      document.body.classList.add('gamepad-connected');\n    }\n\n    /**\n     * gamepad was disconnected\n     */\n    padDisconnected() {\n      if (this.getGamepads().length === 0) {\n        document.body.classList.remove('gamepad-connected');\n      }\n    }\n\n    /**\n     * add an event handler\n     * @param {string} event name of the button event\n     * @param {object} modifiers vue binding modifiers\n     * @param {function} callback function to trigger\n     * @param {object} vnode vue directive vnode\n     */\n    addListener(event, modifiers, callback, vnode = null) {\n      const action = modifiers.released ? 'released' : 'pressed';\n      const repeat = !!modifiers.repeat;\n\n      // if we don't already have an array initialised for the current event\n      // do it now\n      const events = get(this.events, [this.layer, action, event], []);\n      if (events.length === 0) {\n        set(this.events, [this.layer, action, event], []);\n      }\n\n      // register the event\n      this.events[this.layer][action][event].push({ vnode, repeat, callback });\n\n      // inject classes\n      if (options.injectClasses && vnode && vnode.elm) {\n        vnode.elm.classList.add('v-gamepad', `v-gamepad--${event}`);\n      }\n    }\n\n    /**\n     * remove an event handler\n     * @param {string} event name of the button event\n     * @param {object} modifiers vue binding modifiers\n     * @param {function} callback trigger function\n     */\n    removeListener(event, modifiers, callback) {\n      const action = modifiers.released ? 'released' : 'pressed';\n\n      // get a list of all events for the current action\n      let events = get(this.events, [this.layer, action, event], []);\n      if (events.length > 0) {\n        // filter any events which have same callback\n        events = events.filter((e) => e.callback !== callback);\n\n        // if we have any remaining events after the filter, update the array\n        // otherwise delete the object\n        if (events.length > 0) {\n          set(this.events, [this.layer, action, event], events);\n        } else {\n          delete this.events[this.layer][action][event];\n        }\n      }\n    }\n\n    /**\n     * switch to a new layer\n     * @param {number} layer layer number to switch to\n     */\n    switchToLayer(layer) {\n      if (this.layer !== layer) {\n        // keep track of the old layer before we switch\n        this.layers[layer] = this.layer;\n        this.layer = layer;\n      }\n    }\n\n    /**\n     * remove a layer, delete the registered events and switch back to the old layer\n     * @param {number} layer layer number to remove\n     */\n    removeLayer(layer) {\n      // switch back to the previous layer\n      this.layer = this.layers[layer];\n      delete this.layers[layer];\n\n      // delete the layer events\n      delete this.events[layer];\n    }\n\n    /**\n     * main loop\n     */\n    run() {\n\t\tconsole.log(this.getGamepads());\n      this.getGamepads().forEach((pad) => {\n        // check gamepad buttons\n        pad.buttons.forEach((button, index) => {\n          const name = options.buttonNames[index];\n\n          // button is pressed\n          if (button.pressed) {\n            const events = get(this.events, [this.layer, 'pressed', name], []);\n\n            if (events.length > 0) {\n              const event = events[events.length - 1];\n              const now = Date.now();\n              const initial = typeof this.holding[name] === 'undefined';\n\n              // button was just pressed, or is repeating\n              if (initial\n                  || (event.repeat\n                      && (now - this.holding[name]) >= options.buttonRepeatTimeout)) {\n                this.holding[name] = now;\n                if (initial) {\n                  this.holding[name] += (options.buttonInitialTimeout\n                                         - options.buttonRepeatTimeout);\n                }\n                event.callback.call();\n              }\n            }\n          // button was released\n          } else if (!button.pressed && typeof this.holding[name] !== 'undefined') {\n            delete this.holding[name];\n\n            const events = get(this.events, [this.layer, 'released', name], []);\n            if (events.length > 0) {\n              const event = events[events.length - 1];\n              event.callback.call();\n            }\n          }\n        });\n\n        // check gamepad axis\n        pad.axes.forEach((value, index) => {\n          if (value >= options.analogThreshold || value <= -(options.analogThreshold)) {\n            const name = getAxisNameFromValue(index, value);\n            const events = get(this.events, [this.layer, 'pressed', name], []);\n\n            if (events.length > 0) {\n              const event = events[events.length - 1];\n              const now = Date.now();\n              const initial = typeof this.holding[name] === 'undefined';\n\n              // axis was just moved, or is repeating\n              if (initial\n                  || (event.repeat\n                      && (now - this.holding[name]) >= options.buttonRepeatTimeout)) {\n                this.holding[name] = now;\n                if (initial) {\n                  this.holding[name] += (options.buttonInitialTimeout\n                                         - options.buttonRepeatTimeout);\n                }\n                event.callback.call();\n              }\n            }\n          } else {\n            const names = getAxisNames(index);\n\n            // trigger the release event if this axis was previously pressed\n            names.filter((name) => this.holding[name])\n              .forEach((name) => {\n                delete this.holding[name];\n\n                const events = get(this.events, [this.layer, 'released', name], []);\n                if (events.length > 0) {\n                  const event = events[events.length - 1];\n                  event.callback.call();\n                }\n              });\n          }\n        });\n      });\n\n      this.animationFrame = requestAnimationFrame(this.run.bind(this));\n    }\n\n    /**\n     * get an array of active gamepads\n     * @return {array}\n     */\n    getGamepads() {\n      return Array.from(navigator.getGamepads()).filter((pad) => pad !== null);\n    }\n\n    /**\n     * helper function to test if a binding is valid\n     * @param {object} binding binding to test which includes arg & value\n     * @return {boolean}\n     */\n    isValidBinding(binding) {\n      return typeof binding.arg !== 'undefined' && (typeof binding.value === 'function' || (typeof binding.value === 'undefined' && typeof binding.expression === 'undefined'));\n    }\n  };\n}\n","import GamepadFactory from './gamepad';\nimport { ButtonNames } from './button-mapping';\n\nexport default {\n  /**\n   * install function\n   * @param {Vue} Vue\n   * @param {object} options\n   */\n  install(Vue, options = {}) {\n    // we need basic gamepad api support to work\n    if (!('getGamepads' in navigator)) {\n      console.error('vue-gamepad: your browser does not support the Gamepad API!');\n      return;\n    }\n\n    const DefaultOptions = {\n      analogThreshold: 0.5,\n      buttonNames: ButtonNames,\n      buttonRepeatTimeout: 200,\n      buttonInitialTimeout: 200,\n      injectClasses: true,\n    };\n\n    const Gamepad = GamepadFactory(Vue, { ...DefaultOptions, ...options });\n    const gamepad = new Gamepad();\n\n    /* eslint-disable no-param-reassign */\n    Vue.prototype.$gamepad = gamepad;\n\n    Vue.directive('gamepad', {\n      bind: (el, binding, vnode) => {\n        if (gamepad.isValidBinding(binding)) {\n          const callback = typeof binding.value !== 'undefined' ? binding.value : vnode.data.on.click;\n          gamepad.addListener(binding.arg, binding.modifiers, callback, vnode);\n        } else {\n          console.error(`invalid binding. '${binding.arg}' was not bound.`);\n        }\n      },\n      unbind: (el, binding, vnode) => {\n        if (gamepad.isValidBinding(binding)) {\n          const callback = typeof binding.value !== 'undefined' ? binding.value : vnode.data.on.click;\n          gamepad.removeListener(binding.arg, binding.modifiers, callback);\n        } else {\n          console.error(`invalid binding. '${binding.arg}' was not unbound.`);\n        }\n      },\n    });\n\n    Vue.directive('gamepad-layer', {\n      bind: (el, binding) => gamepad.switchToLayer(binding.value),\n      unbind: (el, binding) => gamepad.removeLayer(binding.value),\n    });\n  },\n};\n"],"names":["set","obj","keys","value","tmp","length","shift","get","def","undefined","ButtonNames","PositiveAxisNames","NegativeAxisNames","getAxisNameFromValue","axis","getAxisNames","Vue","options","holding","events","layer","layers","window","addEventListener","padConnected","bind","padDisconnected","animationFrame","requestAnimationFrame","run","document","body","classList","add","getGamepads","remove","event","modifiers","callback","vnode","action","released","repeat","push","injectClasses","elm","filter","e","console","log","forEach","pad","buttons","button","index","name","buttonNames","pressed","now","Date","initial","buttonRepeatTimeout","buttonInitialTimeout","call","axes","analogThreshold","names","Array","from","navigator","binding","arg","expression","install","error","DefaultOptions","Gamepad","GamepadFactory","gamepad","prototype","$gamepad","directive","el","isValidBinding","data","on","click","addListener","unbind","removeListener","switchToLayer","removeLayer"],"mappings":"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"}