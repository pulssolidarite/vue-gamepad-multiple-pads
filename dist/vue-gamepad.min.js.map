{"version":3,"file":"vue-gamepad.min.js","sources":["../lib/utils.js","../lib/button-mapping.js","../lib/gamepad.js","../lib/index.js"],"sourcesContent":["/**\n * helper function to build all nested properties similar to lodash's _.set function\n *\n * set(object, ['x', 'y', 'z'], 'default')\n * console.log(object.x.y.z);\n *  => default\n *\n * @param {object} obj object to build properties for\n * @param {array} keys list of keys to nest\n * @param {any} value value to set\n */\nexport function set(obj, keys, value) {\n  /* eslint-disable no-param-reassign */\n  obj[keys[0]] = obj[keys[0]] || {};\n  const tmp = obj[keys[0]];\n\n  if (keys.length > 1) {\n    keys.shift();\n    set(tmp, keys, value);\n  } else {\n    obj[keys[0]] = value;\n  }\n\n  return obj;\n}\n\n/**\n * helper function to get value from a nest object similar to lodash's _.get function\n *\n * get({ x: { y: 0 } }, ['x', 'y', 'z'], [])\n * => []\n *\n * @param {object} obj object to get properties from\n * @param {array} keys list of keys to use\n * @param {any} [def=undefined] default value if nothing was found\n */\nexport function get(obj, keys, def = undefined) {\n  const tmp = obj[keys[0]];\n\n  if (keys.length > 1 && tmp) {\n    keys.shift();\n    return get(tmp, keys) || def;\n  }\n\n  return tmp || def;\n}\n","export const ButtonNames = [\n  'button-a', 'button-b', 'button-x', 'button-y',\n  'shoulder-left', 'shoulder-right', 'trigger-left', 'trigger-right',\n  'button-select', 'button-start',\n  'left-stick-in', 'right-stick-in',\n  'button-dpad-up', 'button-dpad-down', 'button-dpad-left', 'button-dpad-right',\n  'vendor',\n];\n\nexport const PositiveAxisNames = [\n  'left-analog-right', 'left-analog-down',\n  'right-analog-right', 'right-analog-down',\n];\n\nexport const NegativeAxisNames = [\n  'left-analog-left', 'left-analog-up',\n  'right-analog-left', 'right-analog-up',\n];\n\n/**\n * get name of axis from input value\n * @param {number} axis axis id\n * @param {number} value current input value\n * @return {string} string representing the axis name\n */\nexport function getAxisNameFromValue(axis, value) {\n  if (value > 0) return PositiveAxisNames[axis];\n  return NegativeAxisNames[axis];\n}\n\n/**\n * get the name of both position and negative names from an axis\n * @param {number} axis axis is\n * @return {array} array containing both position and negative axis names\n */\nexport function getAxisNames(axis) {\n  return [PositiveAxisNames[axis], NegativeAxisNames[axis]];\n}\n","import { set, get } from './utils';\nimport { getAxisNameFromValue, getAxisNames } from './button-mapping';\n\nexport default function (Vue, options = {}) {\n\treturn class Gamepad {\n\t\tconstructor() {\n\t\t\tthis.holding = {};\n\t\t\tthis.events = {};\n\t\t\tthis.layer = 0;\n\t\t\tthis.layers = {};\n\n\t\t\twindow.addEventListener('gamepadconnected', this.padConnected.bind(this));\n\t\t\twindow.addEventListener('gamepaddisconnected', this.padDisconnected.bind(this));\n\n\t\t\tthis.animationFrame = requestAnimationFrame(this.run.bind(this));\n\t\t}\n\n\t\t/**\n\t\t * gamepad was connected\n\t\t */\n\t\tpadConnected() {\n\t\t\tdocument.body.classList.add('gamepad-connected');\n\t\t}\n\n\t\t/**\n\t\t * gamepad was disconnected\n\t\t */\n\t\tpadDisconnected() {\n\t\t\tif (this.getGamepads().length === 0) {\n\t\t\t\tdocument.body.classList.remove('gamepad-connected');\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * add an event handler\n\t\t * @param {string} event name of the button event\n\t\t * @param {object} modifiers vue binding modifiers\n\t\t * @param {function} callback function to trigger\n\t\t * @param {object} vnode vue directive vnode\n\t\t */\n\t\taddListener(event, modifiers, callback, vnode = null) {\n\t\t\tconst action = modifiers.released ? 'released' : 'pressed';\n\t\t\tconst repeat = !!modifiers.repeat;\n\n\t\t\t// if we don't already have an array initialised for the current event\n\t\t\t// do it now\n\t\t\tconst events = get(this.events, [this.layer, action, event], []);\n\t\t\tif (events.length === 0) {\n\t\t\t\tset(this.events, [this.layer, action, event], []);\n\t\t\t}\n\n\t\t\t// register the event\n\t\t\tthis.events[this.layer][action][event].push({ vnode, repeat, callback });\n\n\t\t\t// inject classes\n\t\t\tif (options.injectClasses && vnode && vnode.elm) {\n\t\t\t\tvnode.elm.classList.add('v-gamepad', `v-gamepad--${event}`);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * remove an event handler\n\t\t * @param {string} event name of the button event\n\t\t * @param {object} modifiers vue binding modifiers\n\t\t * @param {function} callback trigger function\n\t\t */\n\t\tremoveListener(event, modifiers, callback) {\n\t\t\tconst action = modifiers.released ? 'released' : 'pressed';\n\n\t\t\t// get a list of all events for the current action\n\t\t\tlet events = get(this.events, [this.layer, action, event], []);\n\t\t\tif (events.length > 0) {\n\t\t\t\t// filter any events which have same callback\n\t\t\t\tevents = events.filter((e) => e.callback !== callback);\n\n\t\t\t\t// if we have any remaining events after the filter, update the array\n\t\t\t\t// otherwise delete the object\n\t\t\t\tif (events.length > 0) {\n\t\t\t\t\tset(this.events, [this.layer, action, event], events);\n\t\t\t\t} else {\n\t\t\t\t\tdelete this.events[this.layer][action][event];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * switch to a new layer\n\t\t * @param {number} layer layer number to switch to\n\t\t */\n\t\tswitchToLayer(layer) {\n\t\t\tif (this.layer !== layer) {\n\t\t\t\t// keep track of the old layer before we switch\n\t\t\t\tthis.layers[layer] = this.layer;\n\t\t\t\tthis.layer = layer;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * remove a layer, delete the registered events and switch back to the old layer\n\t\t * @param {number} layer layer number to remove\n\t\t */\n\t\tremoveLayer(layer) {\n\t\t\t// switch back to the previous layer\n\t\t\tthis.layer = this.layers[layer];\n\t\t\tdelete this.layers[layer];\n\n\t\t\t// delete the layer events\n\t\t\tdelete this.events[layer];\n\t\t}\n\n\t\t/**\n\t\t * main loop\n\t\t */\n\t\trun() {\n\t\t\tvar gamepads = this.getGamepads();\n\t\t\tif (gamepads.length > 1) {\n\t\t\t\tvar pad = gamepads[1];\n\t\t\t// this.getGamepads().forEach((pad) => {\n\t\t\t\t// check gamepad buttons\n\t\t\t\tpad.buttons.forEach((button, index) => {\n\t\t\t\t\tconst name = options.buttonNames[index];\n\n\t\t\t\t\t// button is pressed\n\t\t\t\t\tif (button.pressed) {\n\t\t\t\t\t\tconst events = get(this.events, [this.layer, \"pressed\", name], []);\n\n\t\t\t\t\t\tif (events.length > 0) {\n\t\t\t\t\t\t\tconst event = events[events.length - 1];\n\t\t\t\t\t\t\tconst now = Date.now();\n\t\t\t\t\t\t\tconst initial = typeof this.holding[name] === \"undefined\";\n\n\t\t\t\t\t\t\t// button was just pressed, or is repeating\n\t\t\t\t\t\t\tif (initial || (event.repeat && now - this.holding[name] >= options.buttonRepeatTimeout)) {\n\t\t\t\t\t\t\t\tthis.holding[name] = now;\n\t\t\t\t\t\t\t\tif (initial) {\n\t\t\t\t\t\t\t\t\tthis.holding[name] += options.buttonInitialTimeout - options.buttonRepeatTimeout;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tevent.callback.call();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// button was released\n\t\t\t\t\t} else if (!button.pressed && typeof this.holding[name] !== \"undefined\") {\n\t\t\t\t\t\tdelete this.holding[name];\n\t\t\t\t\t\tconst events = get(this.events, [this.layer, \"released\", name], []);\n\n\t\t\t\t\t\tif (events.length > 0) {\n\t\t\t\t\t\t\tconst event = events[events.length - 1];\n\t\t\t\t\t\t\tevent.callback.call();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// check gamepad axis\n\t\t\t\tpad.axes.forEach((value, index) => {\n\t\t\t\t\tif (value >= options.analogThreshold || value <= -(options.analogThreshold)) {\n\t\t\t\t\t\tconst name = getAxisNameFromValue(index, value);\n\t\t\t\t\t\tconst events = get(this.events, [this.layer, 'pressed', name], []);\n\n\t\t\t\t\t\tif (events.length > 0) {\n\t\t\t\t\t\t\tconst event = events[events.length - 1];\n\t\t\t\t\t\t\tconst now = Date.now();\n\t\t\t\t\t\t\tconst initial = typeof this.holding[name] === 'undefined';\n\n\t\t\t\t\t\t\t// axis was just moved, or is repeating\n\t\t\t\t\t\t\tif (initial || (event.repeat && (now - this.holding[name]) >= options.buttonRepeatTimeout)) {\n\t\t\t\t\t\t\t\tthis.holding[name] = now;\n\t\t\t\t\t\t\t\tif (initial) {\n\t\t\t\t\t\t\t\t\tthis.holding[name] += (options.buttonInitialTimeout - options.buttonRepeatTimeout);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tevent.callback.call();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst names = getAxisNames(index);\n\n\t\t\t\t\t\t// trigger the release event if this axis was previously pressed\n\t\t\t\t\t\tnames.filter((name) => this.holding[name]).forEach((name) => {\n\t\t\t\t\t\t\tdelete this.holding[name];\n\n\t\t\t\t\t\t\tconst events = get(this.events, [this.layer, 'released', name], []);\n\t\t\t\t\t\t\tif (events.length > 0) {\n\t\t\t\t\t\t\t\tconst event = events[events.length - 1];\n\t\t\t\t\t\t\t\tevent.callback.call();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t// });\n\t\t\t};\n\t\t\tthis.animationFrame = requestAnimationFrame(this.run.bind(this));\n\t\t}\n\n\t\t/**\n\t\t * get an array of active gamepads\n\t\t * @return {array}\n\t\t */\n\t\tgetGamepads() {\n\t\t\treturn Array.from(navigator.getGamepads()).filter((pad) => pad !== null);\n\t\t}\n\n\t\t/**\n\t\t * helper function to test if a binding is valid\n\t\t * @param {object} binding binding to test which includes arg & value\n\t\t * @return {boolean}\n\t\t */\n\t\tisValidBinding(binding) {\n\t\t\treturn typeof binding.arg !== 'undefined' && (typeof binding.value === 'function' || (typeof binding.value === 'undefined' && typeof binding.expression === 'undefined'));\n\t\t}\n\t};\n}\n","import GamepadFactory from './gamepad';\nimport { ButtonNames } from './button-mapping';\n\nexport default {\n  /**\n   * install function\n   * @param {Vue} Vue\n   * @param {object} options\n   */\n  install(Vue, options = {}) {\n    // we need basic gamepad api support to work\n    if (!('getGamepads' in navigator)) {\n      console.error('vue-gamepad: your browser does not support the Gamepad API!');\n      return;\n    }\n\n    const DefaultOptions = {\n      analogThreshold: 0.5,\n      buttonNames: ButtonNames,\n      buttonRepeatTimeout: 200,\n      buttonInitialTimeout: 200,\n      injectClasses: true,\n    };\n\n    const Gamepad = GamepadFactory(Vue, { ...DefaultOptions, ...options });\n    const gamepad = new Gamepad();\n\n    /* eslint-disable no-param-reassign */\n    Vue.prototype.$gamepad = gamepad;\n\n    Vue.directive('gamepad', {\n      bind: (el, binding, vnode) => {\n        if (gamepad.isValidBinding(binding)) {\n          const callback = typeof binding.value !== 'undefined' ? binding.value : vnode.data.on.click;\n          gamepad.addListener(binding.arg, binding.modifiers, callback, vnode);\n        } else {\n          console.error(`invalid binding. '${binding.arg}' was not bound.`);\n        }\n      },\n      unbind: (el, binding, vnode) => {\n        if (gamepad.isValidBinding(binding)) {\n          const callback = typeof binding.value !== 'undefined' ? binding.value : vnode.data.on.click;\n          gamepad.removeListener(binding.arg, binding.modifiers, callback);\n        } else {\n          console.error(`invalid binding. '${binding.arg}' was not unbound.`);\n        }\n      },\n    });\n\n    Vue.directive('gamepad-layer', {\n      bind: (el, binding) => gamepad.switchToLayer(binding.value),\n      unbind: (el, binding) => gamepad.removeLayer(binding.value),\n    });\n  },\n};\n"],"names":["set","obj","keys","value","tmp","length","shift","get","def","undefined","ButtonNames","PositiveAxisNames","NegativeAxisNames","getAxisNameFromValue","axis","getAxisNames","Vue","options","holding","events","layer","layers","window","addEventListener","this","padConnected","bind","padDisconnected","animationFrame","requestAnimationFrame","run","document","body","classList","add","getGamepads","remove","event","modifiers","callback","vnode","action","released","repeat","push","injectClasses","elm","filter","e","gamepads","pad","buttons","forEach","button","index","name","buttonNames","pressed","_this","now","Date","initial","buttonRepeatTimeout","buttonInitialTimeout","call","axes","analogThreshold","Array","from","navigator","binding","arg","expression","install","DefaultOptions","Gamepad","GamepadFactory","gamepad","prototype","$gamepad","directive","el","isValidBinding","data","on","click","addListener","console","error","unbind","removeListener","switchToLayer","removeLayer"],"mappings":"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"}